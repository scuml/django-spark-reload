{"version":3,"file":"hotwire_spark.min.js","sources":["../../javascript/hotwire/spark/config.js","../../../node_modules/@rails/actioncable/app/assets/javascripts/actioncable.esm.js","../../javascript/hotwire/spark/channels/consumer.js","../../javascript/hotwire/spark/helpers.js","../../javascript/hotwire/spark/logger.js","../../javascript/hotwire/spark/reloaders/stimulus_reloader.js","../../javascript/hotwire/spark/reloaders/morph_html_reloader.js","../../javascript/hotwire/spark/reloaders/css_reloader.js","../../javascript/hotwire/spark/reloaders/replace_html_reloader.js","../../javascript/hotwire/spark/channels/monitoring_channel.js","../../javascript/hotwire/spark/channels/django_listener.js","../../javascript/hotwire/spark/index.js"],"sourcesContent":["function getConfigurationProperty(name) {\n  return document.querySelector(`meta[name=\"hotwire-spark:${name}\"]`)?.content\n}\n\nexport default {\n  loggingEnabled: getConfigurationProperty(\"logging\") ?? false,\n  htmlReloadMethod: getConfigurationProperty(\"html-reload-method\"),\n  cableServerPath: getConfigurationProperty(\"cable-server-path\"),\n}\n","var adapters = {\n  logger: typeof console !== \"undefined\" ? console : undefined,\n  WebSocket: typeof WebSocket !== \"undefined\" ? WebSocket : undefined\n};\n\nvar logger = {\n  log(...messages) {\n    if (this.enabled) {\n      messages.push(Date.now());\n      adapters.logger.log(\"[ActionCable]\", ...messages);\n    }\n  }\n};\n\nconst now = () => (new Date).getTime();\n\nconst secondsSince = time => (now() - time) / 1e3;\n\nclass ConnectionMonitor {\n  constructor(connection) {\n    this.visibilityDidChange = this.visibilityDidChange.bind(this);\n    this.connection = connection;\n    this.reconnectAttempts = 0;\n  }\n  start() {\n    if (!this.isRunning()) {\n      this.startedAt = now();\n      delete this.stoppedAt;\n      this.startPolling();\n      addEventListener(\"visibilitychange\", this.visibilityDidChange);\n      logger.log(`ConnectionMonitor started. stale threshold = ${this.constructor.staleThreshold} s`);\n    }\n  }\n  stop() {\n    if (this.isRunning()) {\n      this.stoppedAt = now();\n      this.stopPolling();\n      removeEventListener(\"visibilitychange\", this.visibilityDidChange);\n      logger.log(\"ConnectionMonitor stopped\");\n    }\n  }\n  isRunning() {\n    return this.startedAt && !this.stoppedAt;\n  }\n  recordMessage() {\n    this.pingedAt = now();\n  }\n  recordConnect() {\n    this.reconnectAttempts = 0;\n    delete this.disconnectedAt;\n    logger.log(\"ConnectionMonitor recorded connect\");\n  }\n  recordDisconnect() {\n    this.disconnectedAt = now();\n    logger.log(\"ConnectionMonitor recorded disconnect\");\n  }\n  startPolling() {\n    this.stopPolling();\n    this.poll();\n  }\n  stopPolling() {\n    clearTimeout(this.pollTimeout);\n  }\n  poll() {\n    this.pollTimeout = setTimeout((() => {\n      this.reconnectIfStale();\n      this.poll();\n    }), this.getPollInterval());\n  }\n  getPollInterval() {\n    const {staleThreshold: staleThreshold, reconnectionBackoffRate: reconnectionBackoffRate} = this.constructor;\n    const backoff = Math.pow(1 + reconnectionBackoffRate, Math.min(this.reconnectAttempts, 10));\n    const jitterMax = this.reconnectAttempts === 0 ? 1 : reconnectionBackoffRate;\n    const jitter = jitterMax * Math.random();\n    return staleThreshold * 1e3 * backoff * (1 + jitter);\n  }\n  reconnectIfStale() {\n    if (this.connectionIsStale()) {\n      logger.log(`ConnectionMonitor detected stale connection. reconnectAttempts = ${this.reconnectAttempts}, time stale = ${secondsSince(this.refreshedAt)} s, stale threshold = ${this.constructor.staleThreshold} s`);\n      this.reconnectAttempts++;\n      if (this.disconnectedRecently()) {\n        logger.log(`ConnectionMonitor skipping reopening recent disconnect. time disconnected = ${secondsSince(this.disconnectedAt)} s`);\n      } else {\n        logger.log(\"ConnectionMonitor reopening\");\n        this.connection.reopen();\n      }\n    }\n  }\n  get refreshedAt() {\n    return this.pingedAt ? this.pingedAt : this.startedAt;\n  }\n  connectionIsStale() {\n    return secondsSince(this.refreshedAt) > this.constructor.staleThreshold;\n  }\n  disconnectedRecently() {\n    return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;\n  }\n  visibilityDidChange() {\n    if (document.visibilityState === \"visible\") {\n      setTimeout((() => {\n        if (this.connectionIsStale() || !this.connection.isOpen()) {\n          logger.log(`ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = ${document.visibilityState}`);\n          this.connection.reopen();\n        }\n      }), 200);\n    }\n  }\n}\n\nConnectionMonitor.staleThreshold = 6;\n\nConnectionMonitor.reconnectionBackoffRate = .15;\n\nvar INTERNAL = {\n  message_types: {\n    welcome: \"welcome\",\n    disconnect: \"disconnect\",\n    ping: \"ping\",\n    confirmation: \"confirm_subscription\",\n    rejection: \"reject_subscription\"\n  },\n  disconnect_reasons: {\n    unauthorized: \"unauthorized\",\n    invalid_request: \"invalid_request\",\n    server_restart: \"server_restart\",\n    remote: \"remote\"\n  },\n  default_mount_path: \"/cable\",\n  protocols: [ \"actioncable-v1-json\", \"actioncable-unsupported\" ]\n};\n\nconst {message_types: message_types, protocols: protocols} = INTERNAL;\n\nconst supportedProtocols = protocols.slice(0, protocols.length - 1);\n\nconst indexOf = [].indexOf;\n\nclass Connection {\n  constructor(consumer) {\n    this.open = this.open.bind(this);\n    this.consumer = consumer;\n    this.subscriptions = this.consumer.subscriptions;\n    this.monitor = new ConnectionMonitor(this);\n    this.disconnected = true;\n  }\n  send(data) {\n    if (this.isOpen()) {\n      this.webSocket.send(JSON.stringify(data));\n      return true;\n    } else {\n      return false;\n    }\n  }\n  open() {\n    if (this.isActive()) {\n      logger.log(`Attempted to open WebSocket, but existing socket is ${this.getState()}`);\n      return false;\n    } else {\n      const socketProtocols = [ ...protocols, ...this.consumer.subprotocols || [] ];\n      logger.log(`Opening WebSocket, current state is ${this.getState()}, subprotocols: ${socketProtocols}`);\n      if (this.webSocket) {\n        this.uninstallEventHandlers();\n      }\n      this.webSocket = new adapters.WebSocket(this.consumer.url, socketProtocols);\n      this.installEventHandlers();\n      this.monitor.start();\n      return true;\n    }\n  }\n  close({allowReconnect: allowReconnect} = {\n    allowReconnect: true\n  }) {\n    if (!allowReconnect) {\n      this.monitor.stop();\n    }\n    if (this.isOpen()) {\n      return this.webSocket.close();\n    }\n  }\n  reopen() {\n    logger.log(`Reopening WebSocket, current state is ${this.getState()}`);\n    if (this.isActive()) {\n      try {\n        return this.close();\n      } catch (error) {\n        logger.log(\"Failed to reopen WebSocket\", error);\n      } finally {\n        logger.log(`Reopening WebSocket in ${this.constructor.reopenDelay}ms`);\n        setTimeout(this.open, this.constructor.reopenDelay);\n      }\n    } else {\n      return this.open();\n    }\n  }\n  getProtocol() {\n    if (this.webSocket) {\n      return this.webSocket.protocol;\n    }\n  }\n  isOpen() {\n    return this.isState(\"open\");\n  }\n  isActive() {\n    return this.isState(\"open\", \"connecting\");\n  }\n  triedToReconnect() {\n    return this.monitor.reconnectAttempts > 0;\n  }\n  isProtocolSupported() {\n    return indexOf.call(supportedProtocols, this.getProtocol()) >= 0;\n  }\n  isState(...states) {\n    return indexOf.call(states, this.getState()) >= 0;\n  }\n  getState() {\n    if (this.webSocket) {\n      for (let state in adapters.WebSocket) {\n        if (adapters.WebSocket[state] === this.webSocket.readyState) {\n          return state.toLowerCase();\n        }\n      }\n    }\n    return null;\n  }\n  installEventHandlers() {\n    for (let eventName in this.events) {\n      const handler = this.events[eventName].bind(this);\n      this.webSocket[`on${eventName}`] = handler;\n    }\n  }\n  uninstallEventHandlers() {\n    for (let eventName in this.events) {\n      this.webSocket[`on${eventName}`] = function() {};\n    }\n  }\n}\n\nConnection.reopenDelay = 500;\n\nConnection.prototype.events = {\n  message(event) {\n    if (!this.isProtocolSupported()) {\n      return;\n    }\n    const {identifier: identifier, message: message, reason: reason, reconnect: reconnect, type: type} = JSON.parse(event.data);\n    this.monitor.recordMessage();\n    switch (type) {\n     case message_types.welcome:\n      if (this.triedToReconnect()) {\n        this.reconnectAttempted = true;\n      }\n      this.monitor.recordConnect();\n      return this.subscriptions.reload();\n\n     case message_types.disconnect:\n      logger.log(`Disconnecting. Reason: ${reason}`);\n      return this.close({\n        allowReconnect: reconnect\n      });\n\n     case message_types.ping:\n      return null;\n\n     case message_types.confirmation:\n      this.subscriptions.confirmSubscription(identifier);\n      if (this.reconnectAttempted) {\n        this.reconnectAttempted = false;\n        return this.subscriptions.notify(identifier, \"connected\", {\n          reconnected: true\n        });\n      } else {\n        return this.subscriptions.notify(identifier, \"connected\", {\n          reconnected: false\n        });\n      }\n\n     case message_types.rejection:\n      return this.subscriptions.reject(identifier);\n\n     default:\n      return this.subscriptions.notify(identifier, \"received\", message);\n    }\n  },\n  open() {\n    logger.log(`WebSocket onopen event, using '${this.getProtocol()}' subprotocol`);\n    this.disconnected = false;\n    if (!this.isProtocolSupported()) {\n      logger.log(\"Protocol is unsupported. Stopping monitor and disconnecting.\");\n      return this.close({\n        allowReconnect: false\n      });\n    }\n  },\n  close(event) {\n    logger.log(\"WebSocket onclose event\");\n    if (this.disconnected) {\n      return;\n    }\n    this.disconnected = true;\n    this.monitor.recordDisconnect();\n    return this.subscriptions.notifyAll(\"disconnected\", {\n      willAttemptReconnect: this.monitor.isRunning()\n    });\n  },\n  error() {\n    logger.log(\"WebSocket onerror event\");\n  }\n};\n\nconst extend = function(object, properties) {\n  if (properties != null) {\n    for (let key in properties) {\n      const value = properties[key];\n      object[key] = value;\n    }\n  }\n  return object;\n};\n\nclass Subscription {\n  constructor(consumer, params = {}, mixin) {\n    this.consumer = consumer;\n    this.identifier = JSON.stringify(params);\n    extend(this, mixin);\n  }\n  perform(action, data = {}) {\n    data.action = action;\n    return this.send(data);\n  }\n  send(data) {\n    return this.consumer.send({\n      command: \"message\",\n      identifier: this.identifier,\n      data: JSON.stringify(data)\n    });\n  }\n  unsubscribe() {\n    return this.consumer.subscriptions.remove(this);\n  }\n}\n\nclass SubscriptionGuarantor {\n  constructor(subscriptions) {\n    this.subscriptions = subscriptions;\n    this.pendingSubscriptions = [];\n  }\n  guarantee(subscription) {\n    if (this.pendingSubscriptions.indexOf(subscription) == -1) {\n      logger.log(`SubscriptionGuarantor guaranteeing ${subscription.identifier}`);\n      this.pendingSubscriptions.push(subscription);\n    } else {\n      logger.log(`SubscriptionGuarantor already guaranteeing ${subscription.identifier}`);\n    }\n    this.startGuaranteeing();\n  }\n  forget(subscription) {\n    logger.log(`SubscriptionGuarantor forgetting ${subscription.identifier}`);\n    this.pendingSubscriptions = this.pendingSubscriptions.filter((s => s !== subscription));\n  }\n  startGuaranteeing() {\n    this.stopGuaranteeing();\n    this.retrySubscribing();\n  }\n  stopGuaranteeing() {\n    clearTimeout(this.retryTimeout);\n  }\n  retrySubscribing() {\n    this.retryTimeout = setTimeout((() => {\n      if (this.subscriptions && typeof this.subscriptions.subscribe === \"function\") {\n        this.pendingSubscriptions.map((subscription => {\n          logger.log(`SubscriptionGuarantor resubscribing ${subscription.identifier}`);\n          this.subscriptions.subscribe(subscription);\n        }));\n      }\n    }), 500);\n  }\n}\n\nclass Subscriptions {\n  constructor(consumer) {\n    this.consumer = consumer;\n    this.guarantor = new SubscriptionGuarantor(this);\n    this.subscriptions = [];\n  }\n  create(channelName, mixin) {\n    const channel = channelName;\n    const params = typeof channel === \"object\" ? channel : {\n      channel: channel\n    };\n    const subscription = new Subscription(this.consumer, params, mixin);\n    return this.add(subscription);\n  }\n  add(subscription) {\n    this.subscriptions.push(subscription);\n    this.consumer.ensureActiveConnection();\n    this.notify(subscription, \"initialized\");\n    this.subscribe(subscription);\n    return subscription;\n  }\n  remove(subscription) {\n    this.forget(subscription);\n    if (!this.findAll(subscription.identifier).length) {\n      this.sendCommand(subscription, \"unsubscribe\");\n    }\n    return subscription;\n  }\n  reject(identifier) {\n    return this.findAll(identifier).map((subscription => {\n      this.forget(subscription);\n      this.notify(subscription, \"rejected\");\n      return subscription;\n    }));\n  }\n  forget(subscription) {\n    this.guarantor.forget(subscription);\n    this.subscriptions = this.subscriptions.filter((s => s !== subscription));\n    return subscription;\n  }\n  findAll(identifier) {\n    return this.subscriptions.filter((s => s.identifier === identifier));\n  }\n  reload() {\n    return this.subscriptions.map((subscription => this.subscribe(subscription)));\n  }\n  notifyAll(callbackName, ...args) {\n    return this.subscriptions.map((subscription => this.notify(subscription, callbackName, ...args)));\n  }\n  notify(subscription, callbackName, ...args) {\n    let subscriptions;\n    if (typeof subscription === \"string\") {\n      subscriptions = this.findAll(subscription);\n    } else {\n      subscriptions = [ subscription ];\n    }\n    return subscriptions.map((subscription => typeof subscription[callbackName] === \"function\" ? subscription[callbackName](...args) : undefined));\n  }\n  subscribe(subscription) {\n    if (this.sendCommand(subscription, \"subscribe\")) {\n      this.guarantor.guarantee(subscription);\n    }\n  }\n  confirmSubscription(identifier) {\n    logger.log(`Subscription confirmed ${identifier}`);\n    this.findAll(identifier).map((subscription => this.guarantor.forget(subscription)));\n  }\n  sendCommand(subscription, command) {\n    const {identifier: identifier} = subscription;\n    return this.consumer.send({\n      command: command,\n      identifier: identifier\n    });\n  }\n}\n\nclass Consumer {\n  constructor(url) {\n    this._url = url;\n    this.subscriptions = new Subscriptions(this);\n    this.connection = new Connection(this);\n    this.subprotocols = [];\n  }\n  get url() {\n    return createWebSocketURL(this._url);\n  }\n  send(data) {\n    return this.connection.send(data);\n  }\n  connect() {\n    return this.connection.open();\n  }\n  disconnect() {\n    return this.connection.close({\n      allowReconnect: false\n    });\n  }\n  ensureActiveConnection() {\n    if (!this.connection.isActive()) {\n      return this.connection.open();\n    }\n  }\n  addSubProtocol(subprotocol) {\n    this.subprotocols = [ ...this.subprotocols, subprotocol ];\n  }\n}\n\nfunction createWebSocketURL(url) {\n  if (typeof url === \"function\") {\n    url = url();\n  }\n  if (url && !/^wss?:/i.test(url)) {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.href = a.href;\n    a.protocol = a.protocol.replace(\"http\", \"ws\");\n    return a.href;\n  } else {\n    return url;\n  }\n}\n\nfunction createConsumer(url = getConfig(\"url\") || INTERNAL.default_mount_path) {\n  return new Consumer(url);\n}\n\nfunction getConfig(name) {\n  const element = document.head.querySelector(`meta[name='action-cable-${name}']`);\n  if (element) {\n    return element.getAttribute(\"content\");\n  }\n}\n\nexport { Connection, ConnectionMonitor, Consumer, INTERNAL, Subscription, SubscriptionGuarantor, Subscriptions, adapters, createConsumer, createWebSocketURL, getConfig, logger };\n","import { createConsumer } from \"@rails/actioncable\"\nimport config from \"../config\"\n\nexport default createConsumer(config.cableServerPath)\n","export function assetNameFromPath(path) {\n  return path.split(\"/\").pop().split(\".\")[0]\n}\n\nexport function pathWithoutAssetDigest(path) {\n  return path.replace(/-[a-z0-9]+\\.(\\w+)(\\?.*)?$/, \".$1\")\n}\n\nexport function urlWithParams(urlString, params) {\n  const url = new URL(urlString, window.location.origin)\n  Object.entries(params).forEach(([ key, value ]) => {\n    url.searchParams.set(key, value)\n  })\n  return url.toString()\n}\n\nexport function cacheBustedUrl(urlString) {\n  return urlWithParams(urlString, { reload: Date.now() })\n}\n\nexport async function reloadHtmlDocument() {\n  let currentUrl = cacheBustedUrl(urlWithParams(window.location.href, { hotwire_spark: \"true\" }))\n  const response = await fetch(currentUrl, { headers: { \"Accept\": \"text/html\" }})\n\n  if (!response.ok) {\n    throw new Error(`${response.status} when fetching ${currentUrl}`)\n  }\n\n  const fetchedHTML = await response.text()\n  const parser = new DOMParser()\n  return parser.parseFromString(fetchedHTML, \"text/html\")\n}\n","import config from \"./config\"\n\nexport function log(...args) {\n  if (config.loggingEnabled) {\n    console.log(`[hotwire_spark]`, ...args)\n  }\n}\n\n","import { log } from \"../logger.js\"\nimport { cacheBustedUrl, reloadHtmlDocument } from \"../helpers.js\"\n\nexport class StimulusReloader {\n  static async reload(changedFilePath) {\n    const document = await reloadHtmlDocument()\n    return new StimulusReloader(document, changedFilePath).reload()\n  }\n\n  static async reloadAll() {\n    Stimulus.controllers.forEach(controller => {\n      Stimulus.unload(controller.identifier)\n      Stimulus.register(controller.identifier, controller.constructor)\n    })\n\n    return Promise.resolve()\n  }\n\n  constructor(document, changedFilePath) {\n    this.document = document\n    this.changedFilePath = changedFilePath\n    this.application = window.Stimulus\n  }\n\n  async reload() {\n    log(\"Reload Stimulus controllers...\")\n\n    this.application.stop()\n\n    await this.#reloadChangedStimulusControllers()\n    this.#unloadDeletedStimulusControllers()\n\n    this.application.start()\n  }\n\n  async #reloadChangedStimulusControllers() {\n    await Promise.all(\n      this.#stimulusControllerPathsToReload.map(async moduleName => this.#reloadStimulusController(moduleName))\n    )\n  }\n\n  get #stimulusControllerPathsToReload() {\n    this.controllerPathsToReload = this.controllerPathsToReload || this.#stimulusControllerPaths.filter(path => this.#shouldReloadController(path))\n    return this.controllerPathsToReload\n  }\n\n  get #stimulusControllerPaths() {\n    return Object.keys(this.#stimulusPathsByModule).filter(path => path.endsWith(\"_controller\"))\n  }\n\n  #shouldReloadController(path) {\n    return this.#extractControllerName(path) === this.#changedControllerIdentifier\n  }\n\n  get #changedControllerIdentifier() {\n    this.changedControllerIdentifier = this.changedControllerIdentifier || this.#extractControllerName(this.changedFilePath)\n    return this.changedControllerIdentifier\n  }\n\n  get #stimulusPathsByModule() {\n    this.pathsByModule = this.pathsByModule || this.#parseImportmapJson()\n    return this.pathsByModule\n  }\n\n  #parseImportmapJson() {\n    const importmapScript = this.document.querySelector(\"script[type=importmap]\")\n    return JSON.parse(importmapScript.text).imports\n  }\n\n  async #reloadStimulusController(moduleName) {\n    log(`\\t${moduleName}`)\n\n    const controllerName = this.#extractControllerName(moduleName)\n    const path = cacheBustedUrl(this.#pathForModuleName(moduleName))\n\n    const module = await import(path)\n\n    this.#registerController(controllerName, module)\n  }\n\n  #unloadDeletedStimulusControllers() {\n    this.#controllersToUnload.forEach(controller => this.#deregisterController(controller.identifier))\n  }\n\n  get #controllersToUnload() {\n    if (this.#didChangeTriggerAReload) {\n      return []\n    } else {\n      return this.application.controllers.filter(controller => this.#changedControllerIdentifier === controller.identifier)\n    }\n  }\n\n  get #didChangeTriggerAReload() {\n    return this.#stimulusControllerPathsToReload.length > 0\n  }\n\n  #pathForModuleName(moduleName) {\n    return this.#stimulusPathsByModule[moduleName]\n  }\n\n  #extractControllerName(path) {\n    return path\n      .replace(/^\\/+/, \"\")\n      .replace(/^controllers\\//, \"\")\n      .replace(\"_controller\", \"\")\n      .replace(/\\//g, \"--\")\n      .replace(/_/g, \"-\")\n      .replace(/\\.js$/, \"\")\n  }\n\n  #registerController(name, module) {\n    this.application.unload(name)\n    this.application.register(name, module.default)\n  }\n\n  #deregisterController(name) {\n    log(`\\tRemoving controller ${name}`)\n    this.application.unload(name)\n  }\n}\n","import { Idiomorph } from \"idiomorph/dist/idiomorph.esm.js\"\nimport { reloadHtmlDocument } from \"../helpers.js\"\nimport { log } from \"../logger.js\"\nimport { StimulusReloader } from \"./stimulus_reloader.js\"\n\nexport class MorphHtmlReloader {\n  static async reload() {\n    return new MorphHtmlReloader().reload()\n  }\n\n  async reload() {\n    await this.#reloadHtml()\n    await this.#reloadStimulus()\n  }\n\n  async #reloadHtml() {\n    log(\"Reload html with morph...\")\n\n    const reloadedDocument = await reloadHtmlDocument()\n    this.#updateBody(reloadedDocument.body)\n    return reloadedDocument\n  }\n\n  #updateBody(newBody) {\n    Idiomorph.morph(document.body, newBody)\n  }\n\n  async #reloadStimulus() {\n    await StimulusReloader.reloadAll()\n  }\n}\n","import { log } from \"../logger.js\"\nimport { cacheBustedUrl, reloadHtmlDocument, pathWithoutAssetDigest } from \"../helpers.js\"\n\nexport class CssReloader {\n  static async reload(...params) {\n    return new CssReloader(...params).reload()\n  }\n\n  constructor(filePattern = /./) {\n    this.filePattern = filePattern\n  }\n\n  async reload() {\n    log(\"Reload css...\")\n    await Promise.all(await this.#reloadAllLinks())\n  }\n\n  async #reloadAllLinks() {\n    const cssLinks = await this.#loadNewCssLinks();\n    return cssLinks.map(link => this.#reloadLinkIfNeeded(link))\n  }\n\n  async #loadNewCssLinks() {\n    const reloadedDocument = await reloadHtmlDocument()\n    return Array.from(reloadedDocument.head.querySelectorAll(\"link[rel='stylesheet']\"))\n  }\n\n  #reloadLinkIfNeeded(link) {\n    if (this.#shouldReloadLink(link)) {\n      return this.#reloadLink(link)\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  #shouldReloadLink(link) {\n    return this.filePattern.test(link.getAttribute(\"href\"))\n  }\n\n  async #reloadLink(link) {\n    return new Promise(resolve => {\n      const href = link.getAttribute(\"href\")\n      const newLink = this.#findExistingLinkFor(link) || this.#appendNewLink(link)\n\n      newLink.setAttribute(\"href\", cacheBustedUrl(link.getAttribute(\"href\")))\n      newLink.onload = () => {\n        log(`\\t${href}`)\n        resolve()\n      }\n    })\n  }\n\n  #findExistingLinkFor(link) {\n    return this.#cssLinks.find(newLink => pathWithoutAssetDigest(link.href) === pathWithoutAssetDigest(newLink.href))\n  }\n\n  get #cssLinks() {\n    return Array.from(document.querySelectorAll(\"link[rel='stylesheet']\"))\n  }\n\n  #appendNewLink(link) {\n    document.head.append(link)\n    return link\n  }\n}\n","import { log } from \"../logger.js\"\n\nexport class ReplaceHtmlReloader {\n  static async reload() {\n    return new ReplaceHtmlReloader().reload()\n  }\n\n  async reload() {\n    await this.#reloadHtml()\n  }\n\n  async #reloadHtml() {\n    log(\"Reload html with Turbo...\")\n\n    this.#keepScrollPosition()\n    await this.#visitCurrentPage()\n  }\n\n  #keepScrollPosition() {\n    document.addEventListener(\"turbo:before-render\", () => {\n      Turbo.navigator.currentVisit.scrolled = true\n    }, { once: true })\n  }\n\n  #visitCurrentPage() {\n    return new Promise(resolve => {\n      document.addEventListener(\"turbo:load\", () => resolve(document), { once: true })\n      window.Turbo.visit(window.location)\n    })\n  }\n}\n","import consumer from \"./consumer\"\nimport { assetNameFromPath } from \"../helpers.js\";\nimport { MorphHtmlReloader } from \"../reloaders/morph_html_reloader.js\";\nimport { CssReloader } from \"../reloaders/css_reloader.js\";\nimport { StimulusReloader } from \"../reloaders/stimulus_reloader.js\";\nimport { ReplaceHtmlReloader } from \"../reloaders/replace_html_reloader.js\";\n\nconsumer.subscriptions.create({ channel: \"Hotwire::Spark::Channel\" }, {\n  connected() {\n    document.body.setAttribute(\"data-hotwire-spark-ready\", \"\")\n  },\n\n  async received(message) {\n    try {\n      await this.dispatch(message)\n    } catch(error) {\n      console.log(`Error on ${message.action}`, error)\n    }\n  },\n\n  dispatch({ action, path }) {\n    switch(action) {\n      case \"reload_html\":\n        return this.reloadHtml()\n      case \"reload_css\":\n        return this.reloadCss(path)\n      case \"reload_stimulus\":\n        return this.reloadStimulus(path)\n      default:\n        throw new Error(`Unknown action: ${action}`)\n    }\n  },\n\n  reloadHtml() {\n    const htmlReloader = HotwireSpark.config.htmlReloadMethod == \"morph\" ? MorphHtmlReloader : ReplaceHtmlReloader\n    return htmlReloader.reload()\n  },\n\n  reloadCss(path) {\n    const fileName = assetNameFromPath(path)\n    return CssReloader.reload(new RegExp(fileName))\n  },\n\n  reloadStimulus(path) {\n    return StimulusReloader.reload(path)\n  }\n})\n\n","'use strict'\n\n{\n  console.info(\"I'm here\");\n  const dataset = document.currentScript.dataset\n  const workerScriptPath = dataset.workerScriptPath\n  const eventsPath = dataset.eventsPath\n\n  if (!window.SharedWorker) {\n    console.debug('😭 django-browser-reload cannot work in this browser.')\n  } else {\n    const worker = new SharedWorker(workerScriptPath, {\n      name: 'django-browser-reload'\n    })\n    console.info(\"Listening\");\n    worker.port.addEventListener('message', (event) => {\n      const message = event.data\n      const reloadType = message.type;\n      const path = message.path;\n      console.info(\"Reload\", reloadType, path);\n      if (reloadType === 'reload') {\n        console.info(\"Hard Reload\");\n        window.location.reload();\n      } else if (reloadType === 'softreload') {\n        console.info(\"Soft Reload\");\n        HotwireSpark.reloadHtml()\n      } else if (reloadType === 'reloadcss') {\n        console.info(\"ReloadCSS\", path);\n        HotwireSpark.reloadCss(path)\n      } else if (reloadType === 'reloadstimulus') {\n        console.info(\"ReloadStimulus\", path);\n        HotwireSpark.reloadStimulus(path)\n      }\n\n    })\n\n    worker.port.postMessage({\n      type: 'initialize',\n      eventsPath\n    })\n\n    worker.port.start()\n  }\n}\n","import config from \"./config.js\"\nimport \"./channels/monitoring_channel.js\"\nimport \"./channels/django_listener.js\"\n\nconst HotwireSpark = {\n  config\n}\n\nexport default HotwireSpark\n"],"names":["getConfigurationProperty","name","document","querySelector","content","config","loggingEnabled","htmlReloadMethod","cableServerPath","adapters","logger","console","undefined","WebSocket","log","messages","this","enabled","push","Date","now","getTime","secondsSince","time","ConnectionMonitor","constructor","connection","visibilityDidChange","bind","reconnectAttempts","start","isRunning","startedAt","stoppedAt","startPolling","addEventListener","staleThreshold","stop","stopPolling","removeEventListener","recordMessage","pingedAt","recordConnect","disconnectedAt","recordDisconnect","poll","clearTimeout","pollTimeout","setTimeout","reconnectIfStale","getPollInterval","reconnectionBackoffRate","Math","pow","min","random","connectionIsStale","refreshedAt","disconnectedRecently","reopen","visibilityState","isOpen","INTERNAL","message_types","welcome","disconnect","ping","confirmation","rejection","disconnect_reasons","unauthorized","invalid_request","server_restart","remote","default_mount_path","protocols","supportedProtocols","slice","length","indexOf","Connection","consumer","open","subscriptions","monitor","disconnected","send","data","webSocket","JSON","stringify","isActive","getState","socketProtocols","subprotocols","uninstallEventHandlers","url","installEventHandlers","close","allowReconnect","error","reopenDelay","getProtocol","protocol","isState","triedToReconnect","isProtocolSupported","call","states","state","readyState","toLowerCase","eventName","events","handler","prototype","message","event","identifier","reason","reconnect","type","parse","reconnectAttempted","reload","confirmSubscription","notify","reconnected","reject","notifyAll","willAttemptReconnect","Subscription","params","mixin","object","properties","key","value","extend","perform","action","command","unsubscribe","remove","SubscriptionGuarantor","pendingSubscriptions","guarantee","subscription","startGuaranteeing","forget","filter","s","stopGuaranteeing","retrySubscribing","retryTimeout","subscribe","map","Subscriptions","guarantor","create","channelName","channel","add","ensureActiveConnection","findAll","sendCommand","callbackName","args","Consumer","_url","test","a","createElement","href","replace","createWebSocketURL","connect","addSubProtocol","subprotocol","element","head","getAttribute","getConfig","createConsumer","pathWithoutAssetDigest","path","urlWithParams","urlString","URL","window","location","origin","Object","entries","forEach","_ref","searchParams","set","toString","cacheBustedUrl","async","reloadHtmlDocument","currentUrl","hotwire_spark","response","fetch","headers","Accept","ok","Error","status","fetchedHTML","text","DOMParser","parseFromString","_len","arguments","Array","_key","StimulusReloader","changedFilePath","reloadAll","Stimulus","controllers","controller","unload","register","Promise","resolve","application","reloadChangedStimulusControllers","unloadDeletedStimulusControllers","all","stimulusControllerPathsToReload","reloadStimulusController","moduleName","controllerPathsToReload","stimulusControllerPaths","shouldReloadController","keys","stimulusPathsByModule","endsWith","extractControllerName","changedControllerIdentifier","pathsByModule","parseImportmapJson","importmapScript","imports","controllerName","pathForModuleName","module","import","registerController","controllersToUnload","deregisterController","didChangeTriggerAReload","default","MorphHtmlReloader","reloadHtml","reloadStimulus","reloadedDocument","updateBody","body","newBody","Idiomorph","morph","CssReloader","filePattern","reloadAllLinks","loadNewCssLinks","link","reloadLinkIfNeeded","from","querySelectorAll","shouldReloadLink","reloadLink","newLink","findExistingLinkFor","appendNewLink","setAttribute","onload","cssLinks","find","append","ReplaceHtmlReloader","keepScrollPosition","visitCurrentPage","Turbo","navigator","currentVisit","scrolled","once","visit","connected","received","dispatch","reloadCss","HotwireSpark","fileName","split","pop","assetNameFromPath","RegExp","info","dataset","currentScript","workerScriptPath","eventsPath","SharedWorker","worker","port","reloadType","postMessage","debug"],"mappings":"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","x_google_ignoreList":[1]}